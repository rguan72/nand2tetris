// bootstrap
    @261
    D=A
    @SP
    M=D
    @Sys.init
    0;JMP
// function Sys.init 0
(Sys.init)
    @0
    D=A
(Sys.init$internalLabel$loop)
    @Sys.init$internalLabel$end
    D;JEQ
    @SP
    A=M
    M=0
    @SP
    M=M+1
    D=D-1
    @Sys.init$internalLabel$loop
    0;JMP
(Sys.init$internalLabel$end)
// push constant 4000	//
    @4000	//
    D=A
    @SP
    A=M
    M=D
    @SP
    M=M+1
// pop pointer 0
    @THIS
    D=A
    @0
    D=D+A
    @R13
    M=D
    @SP
    M=M-1
    A=M
    D=M
    @R13
    A=M
    M=D
// push constant 5000
    @5000
    D=A
    @SP
    A=M
    M=D
    @SP
    M=M+1
// pop pointer 1
    @THIS
    D=A
    @1
    D=D+A
    @R13
    M=D
    @SP
    M=M-1
    A=M
    D=M
    @R13
    A=M
    M=D
// call Sys.main 0
    @Sys.main$ret.5
    D=A
    @SP
    A=M
    M=D
    @SP
    M=M+1
    @LCL
    D=M
    @SP
    A=M
    M=D
    @SP
    M=M+1
    @ARG
    D=M
    @SP
    A=M
    M=D
    @SP
    M=M+1
    @THIS
    D=M
    @SP
    A=M
    M=D
    @SP
    M=M+1
    @THAT
    D=M
    @SP
    A=M
    M=D
    @SP
    M=M+1
    @SP
    D=M
    @5
    D=D-A
    @0
    D=D-A
    @ARG
    M=D
    @SP
    D=M
    @LCL
    M=D
    @Sys.main
    0;JMP
(Sys.main$ret.5)
// pop temp 1
    @1
    D=A
    @5
    D=A+D
    @R13
    M=D
    @SP
    M=M-1
    A=M
    D=M
    @R13
    A=M
    M=D
(Sys.Sys.init$LOOP)
// goto LOOP
    @Sys.Sys.init$LOOP
    0;JMP
// function Sys.main 5
(Sys.main)
    @5
    D=A
(Sys.main$internalLabel$loop)
    @Sys.main$internalLabel$end
    D;JEQ
    @SP
    A=M
    M=0
    @SP
    M=M+1
    D=D-1
    @Sys.main$internalLabel$loop
    0;JMP
(Sys.main$internalLabel$end)
// push constant 4001
    @4001
    D=A
    @SP
    A=M
    M=D
    @SP
    M=M+1
// pop pointer 0
    @THIS
    D=A
    @0
    D=D+A
    @R13
    M=D
    @SP
    M=M-1
    A=M
    D=M
    @R13
    A=M
    M=D
// push constant 5001
    @5001
    D=A
    @SP
    A=M
    M=D
    @SP
    M=M+1
// pop pointer 1
    @THIS
    D=A
    @1
    D=D+A
    @R13
    M=D
    @SP
    M=M-1
    A=M
    D=M
    @R13
    A=M
    M=D
// push constant 200
    @200
    D=A
    @SP
    A=M
    M=D
    @SP
    M=M+1
// pop local 1
    @1
    D=A
    @LCL
    D=M+D
    @R13
    M=D
    @SP
    M=M-1
    A=M
    D=M
    @R13
    A=M
    M=D
// push constant 40
    @40
    D=A
    @SP
    A=M
    M=D
    @SP
    M=M+1
// pop local 2
    @2
    D=A
    @LCL
    D=M+D
    @R13
    M=D
    @SP
    M=M-1
    A=M
    D=M
    @R13
    A=M
    M=D
// push constant 6
    @6
    D=A
    @SP
    A=M
    M=D
    @SP
    M=M+1
// pop local 3
    @3
    D=A
    @LCL
    D=M+D
    @R13
    M=D
    @SP
    M=M-1
    A=M
    D=M
    @R13
    A=M
    M=D
// push constant 123
    @123
    D=A
    @SP
    A=M
    M=D
    @SP
    M=M+1
// call Sys.add12 1
    @Sys.add12$ret.21
    D=A
    @SP
    A=M
    M=D
    @SP
    M=M+1
    @LCL
    D=M
    @SP
    A=M
    M=D
    @SP
    M=M+1
    @ARG
    D=M
    @SP
    A=M
    M=D
    @SP
    M=M+1
    @THIS
    D=M
    @SP
    A=M
    M=D
    @SP
    M=M+1
    @THAT
    D=M
    @SP
    A=M
    M=D
    @SP
    M=M+1
    @SP
    D=M
    @5
    D=D-A
    @1
    D=D-A
    @ARG
    M=D
    @SP
    D=M
    @LCL
    M=D
    @Sys.add12
    0;JMP
(Sys.add12$ret.21)
// pop temp 0
    @0
    D=A
    @5
    D=A+D
    @R13
    M=D
    @SP
    M=M-1
    A=M
    D=M
    @R13
    A=M
    M=D
// push local 0
    @LCL
    D=M
    @0
    A=D+A
    D=M
    @SP
    A=M
    M=D
    @SP
    M=M+1
// push local 1
    @LCL
    D=M
    @1
    A=D+A
    D=M
    @SP
    A=M
    M=D
    @SP
    M=M+1
// push local 2
    @LCL
    D=M
    @2
    A=D+A
    D=M
    @SP
    A=M
    M=D
    @SP
    M=M+1
// push local 3
    @LCL
    D=M
    @3
    A=D+A
    D=M
    @SP
    A=M
    M=D
    @SP
    M=M+1
// push local 4
    @LCL
    D=M
    @4
    A=D+A
    D=M
    @SP
    A=M
    M=D
    @SP
    M=M+1
// add
    @SP
    M=M-1
    A=M
    D=M
    @SP
    A=M-1
    M=M+D
// add
    @SP
    M=M-1
    A=M
    D=M
    @SP
    A=M-1
    M=M+D
// add
    @SP
    M=M-1
    A=M
    D=M
    @SP
    A=M-1
    M=M+D
// add
    @SP
    M=M-1
    A=M
    D=M
    @SP
    A=M-1
    M=M+D
// return
    @LCL
    D=M
    @R13
    M=D
    @SP
    A=M-1
    D=M
    @ARG
    A=M
    M=D
    @ARG
    D=M+1
    @SP
    M=D
    @LCL
    A=M-1
    D=M
    @THAT
    M=D
    @LCL
    D=M
    @2
    D=D-A
    A=D
    D=M
    @THIS
    M=D
    @LCL
    D=M
    @3
    D=D-A
    A=D
    D=M
    @ARG
    M=D
    @LCL
    D=M
    @4
    D=D-A
    A=D
    D=M
    @LCL
    M=D
    @R13
    D=M
    @5
    D=D-A
    A=D
    A=M
    0;JMP
// function Sys.add12 0
(Sys.add12)
    @0
    D=A
(Sys.add12$internalLabel$loop)
    @Sys.add12$internalLabel$end
    D;JEQ
    @SP
    A=M
    M=0
    @SP
    M=M+1
    D=D-1
    @Sys.add12$internalLabel$loop
    0;JMP
(Sys.add12$internalLabel$end)
// push constant 4002
    @4002
    D=A
    @SP
    A=M
    M=D
    @SP
    M=M+1
// pop pointer 0
    @THIS
    D=A
    @0
    D=D+A
    @R13
    M=D
    @SP
    M=M-1
    A=M
    D=M
    @R13
    A=M
    M=D
// push constant 5002
    @5002
    D=A
    @SP
    A=M
    M=D
    @SP
    M=M+1
// pop pointer 1
    @THIS
    D=A
    @1
    D=D+A
    @R13
    M=D
    @SP
    M=M-1
    A=M
    D=M
    @R13
    A=M
    M=D
// push argument 0
    @ARG
    D=M
    @0
    A=D+A
    D=M
    @SP
    A=M
    M=D
    @SP
    M=M+1
// push constant 12
    @12
    D=A
    @SP
    A=M
    M=D
    @SP
    M=M+1
// add
    @SP
    M=M-1
    A=M
    D=M
    @SP
    A=M-1
    M=M+D
// return
    @LCL
    D=M
    @R13
    M=D
    @SP
    A=M-1
    D=M
    @ARG
    A=M
    M=D
    @ARG
    D=M+1
    @SP
    M=D
    @LCL
    A=M-1
    D=M
    @THAT
    M=D
    @LCL
    D=M
    @2
    D=D-A
    A=D
    D=M
    @THIS
    M=D
    @LCL
    D=M
    @3
    D=D-A
    A=D
    D=M
    @ARG
    M=D
    @LCL
    D=M
    @4
    D=D-A
    A=D
    D=M
    @LCL
    M=D
    @R13
    D=M
    @5
    D=D-A
    A=D
    A=M
    0;JMP
