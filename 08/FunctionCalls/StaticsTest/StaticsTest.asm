// bootstrap
    @261
    D=A
    @SP
    M=D
    @Sys.init
    0;JMP
// function Class1.set 0
(Class1.set)
    @0
    D=A
(Class1.set$internalLabel$loop)
    @Class1.set$internalLabel$end
    D;JEQ
    @SP
    A=M
    M=0
    @SP
    M=M+1
    D=D-1
    @Class1.set$internalLabel$loop
    0;JMP
(Class1.set$internalLabel$end)
// push argument 0
    @ARG
    D=M
    @0
    A=D+A
    D=M
    @SP
    A=M
    M=D
    @SP
    M=M+1
// pop static 0
    @SP
    M=M-1
    A=M
    D=M
    @FunctionCalls.StaticsTest.0
    M=D
// push argument 1
    @ARG
    D=M
    @1
    A=D+A
    D=M
    @SP
    A=M
    M=D
    @SP
    M=M+1
// pop static 1
    @SP
    M=M-1
    A=M
    D=M
    @FunctionCalls.StaticsTest.1
    M=D
// push constant 0
    @0
    D=A
    @SP
    A=M
    M=D
    @SP
    M=M+1
// return
    @LCL
    D=M
    @R13
    M=D
    @SP
    A=M-1
    D=M
    @ARG
    A=M
    M=D
    @ARG
    D=M+1
    @SP
    M=D
    @LCL
    A=M-1
    D=M
    @THAT
    M=D
    @LCL
    D=M
    @2
    D=D-A
    A=D
    D=M
    @THIS
    M=D
    @LCL
    D=M
    @3
    D=D-A
    A=D
    D=M
    @ARG
    M=D
    @LCL
    D=M
    @4
    D=D-A
    A=D
    D=M
    @LCL
    M=D
    @R13
    D=M
    @5
    D=D-A
    A=D
    A=M
    0;JMP
// function Class1.get 0
(Class1.get)
    @0
    D=A
(Class1.get$internalLabel$loop)
    @Class1.get$internalLabel$end
    D;JEQ
    @SP
    A=M
    M=0
    @SP
    M=M+1
    D=D-1
    @Class1.get$internalLabel$loop
    0;JMP
(Class1.get$internalLabel$end)
// push static 0
    @FunctionCalls.StaticsTest.0
    D=M
    @SP
    A=M
    M=D
    @SP
    M=M+1
// push static 1
    @FunctionCalls.StaticsTest.1
    D=M
    @SP
    A=M
    M=D
    @SP
    M=M+1
// sub
    @SP
    M=M-1
    A=M
    D=M
    @SP
    A=M-1
    M=M-D
// return
    @LCL
    D=M
    @R13
    M=D
    @SP
    A=M-1
    D=M
    @ARG
    A=M
    M=D
    @ARG
    D=M+1
    @SP
    M=D
    @LCL
    A=M-1
    D=M
    @THAT
    M=D
    @LCL
    D=M
    @2
    D=D-A
    A=D
    D=M
    @THIS
    M=D
    @LCL
    D=M
    @3
    D=D-A
    A=D
    D=M
    @ARG
    M=D
    @LCL
    D=M
    @4
    D=D-A
    A=D
    D=M
    @LCL
    M=D
    @R13
    D=M
    @5
    D=D-A
    A=D
    A=M
    0;JMP
// function Sys.init 0
(Sys.init)
    @0
    D=A
(Sys.init$internalLabel$loop)
    @Sys.init$internalLabel$end
    D;JEQ
    @SP
    A=M
    M=0
    @SP
    M=M+1
    D=D-1
    @Sys.init$internalLabel$loop
    0;JMP
(Sys.init$internalLabel$end)
// push constant 6
    @6
    D=A
    @SP
    A=M
    M=D
    @SP
    M=M+1
// push constant 8
    @8
    D=A
    @SP
    A=M
    M=D
    @SP
    M=M+1
// call Class1.set 2
    @Class1.set$ret.3
    D=A
    @SP
    A=M
    M=D
    @SP
    M=M+1
    @LCL
    D=M
    @SP
    A=M
    M=D
    @SP
    M=M+1
    @ARG
    D=M
    @SP
    A=M
    M=D
    @SP
    M=M+1
    @THIS
    D=M
    @SP
    A=M
    M=D
    @SP
    M=M+1
    @THAT
    D=M
    @SP
    A=M
    M=D
    @SP
    M=M+1
    @SP
    D=M
    @5
    D=D-A
    @2
    D=D-A
    @ARG
    M=D
    @SP
    D=M
    @LCL
    M=D
    @Class1.set
    0;JMP
(Class1.set$ret.3)
// pop temp 0
    @0
    D=A
    @5
    D=A+D
    @R13
    M=D
    @SP
    M=M-1
    A=M
    D=M
    @R13
    A=M
    M=D
// push constant 23
    @23
    D=A
    @SP
    A=M
    M=D
    @SP
    M=M+1
// push constant 15
    @15
    D=A
    @SP
    A=M
    M=D
    @SP
    M=M+1
// call Class2.set 2
    @Class2.set$ret.7
    D=A
    @SP
    A=M
    M=D
    @SP
    M=M+1
    @LCL
    D=M
    @SP
    A=M
    M=D
    @SP
    M=M+1
    @ARG
    D=M
    @SP
    A=M
    M=D
    @SP
    M=M+1
    @THIS
    D=M
    @SP
    A=M
    M=D
    @SP
    M=M+1
    @THAT
    D=M
    @SP
    A=M
    M=D
    @SP
    M=M+1
    @SP
    D=M
    @5
    D=D-A
    @2
    D=D-A
    @ARG
    M=D
    @SP
    D=M
    @LCL
    M=D
    @Class2.set
    0;JMP
(Class2.set$ret.7)
// pop temp 0
    @0
    D=A
    @5
    D=A+D
    @R13
    M=D
    @SP
    M=M-1
    A=M
    D=M
    @R13
    A=M
    M=D
// call Class1.get 0
    @Class1.get$ret.9
    D=A
    @SP
    A=M
    M=D
    @SP
    M=M+1
    @LCL
    D=M
    @SP
    A=M
    M=D
    @SP
    M=M+1
    @ARG
    D=M
    @SP
    A=M
    M=D
    @SP
    M=M+1
    @THIS
    D=M
    @SP
    A=M
    M=D
    @SP
    M=M+1
    @THAT
    D=M
    @SP
    A=M
    M=D
    @SP
    M=M+1
    @SP
    D=M
    @5
    D=D-A
    @0
    D=D-A
    @ARG
    M=D
    @SP
    D=M
    @LCL
    M=D
    @Class1.get
    0;JMP
(Class1.get$ret.9)
// call Class2.get 0
    @Class2.get$ret.10
    D=A
    @SP
    A=M
    M=D
    @SP
    M=M+1
    @LCL
    D=M
    @SP
    A=M
    M=D
    @SP
    M=M+1
    @ARG
    D=M
    @SP
    A=M
    M=D
    @SP
    M=M+1
    @THIS
    D=M
    @SP
    A=M
    M=D
    @SP
    M=M+1
    @THAT
    D=M
    @SP
    A=M
    M=D
    @SP
    M=M+1
    @SP
    D=M
    @5
    D=D-A
    @0
    D=D-A
    @ARG
    M=D
    @SP
    D=M
    @LCL
    M=D
    @Class2.get
    0;JMP
(Class2.get$ret.10)
(Sys.Sys.init$WHILE)
// goto WHILE
    @Sys.Sys.init$WHILE
    0;JMP
// function Class2.set 0
(Class2.set)
    @0
    D=A
(Class2.set$internalLabel$loop)
    @Class2.set$internalLabel$end
    D;JEQ
    @SP
    A=M
    M=0
    @SP
    M=M+1
    D=D-1
    @Class2.set$internalLabel$loop
    0;JMP
(Class2.set$internalLabel$end)
// push argument 0
    @ARG
    D=M
    @0
    A=D+A
    D=M
    @SP
    A=M
    M=D
    @SP
    M=M+1
// pop static 0
    @SP
    M=M-1
    A=M
    D=M
    @FunctionCalls.StaticsTest.0
    M=D
// push argument 1
    @ARG
    D=M
    @1
    A=D+A
    D=M
    @SP
    A=M
    M=D
    @SP
    M=M+1
// pop static 1
    @SP
    M=M-1
    A=M
    D=M
    @FunctionCalls.StaticsTest.1
    M=D
// push constant 0
    @0
    D=A
    @SP
    A=M
    M=D
    @SP
    M=M+1
// return
    @LCL
    D=M
    @R13
    M=D
    @SP
    A=M-1
    D=M
    @ARG
    A=M
    M=D
    @ARG
    D=M+1
    @SP
    M=D
    @LCL
    A=M-1
    D=M
    @THAT
    M=D
    @LCL
    D=M
    @2
    D=D-A
    A=D
    D=M
    @THIS
    M=D
    @LCL
    D=M
    @3
    D=D-A
    A=D
    D=M
    @ARG
    M=D
    @LCL
    D=M
    @4
    D=D-A
    A=D
    D=M
    @LCL
    M=D
    @R13
    D=M
    @5
    D=D-A
    A=D
    A=M
    0;JMP
// function Class2.get 0
(Class2.get)
    @0
    D=A
(Class2.get$internalLabel$loop)
    @Class2.get$internalLabel$end
    D;JEQ
    @SP
    A=M
    M=0
    @SP
    M=M+1
    D=D-1
    @Class2.get$internalLabel$loop
    0;JMP
(Class2.get$internalLabel$end)
// push static 0
    @FunctionCalls.StaticsTest.0
    D=M
    @SP
    A=M
    M=D
    @SP
    M=M+1
// push static 1
    @FunctionCalls.StaticsTest.1
    D=M
    @SP
    A=M
    M=D
    @SP
    M=M+1
// sub
    @SP
    M=M-1
    A=M
    D=M
    @SP
    A=M-1
    M=M-D
// return
    @LCL
    D=M
    @R13
    M=D
    @SP
    A=M-1
    D=M
    @ARG
    A=M
    M=D
    @ARG
    D=M+1
    @SP
    M=D
    @LCL
    A=M-1
    D=M
    @THAT
    M=D
    @LCL
    D=M
    @2
    D=D-A
    A=D
    D=M
    @THIS
    M=D
    @LCL
    D=M
    @3
    D=D-A
    A=D
    D=M
    @ARG
    M=D
    @LCL
    D=M
    @4
    D=D-A
    A=D
    D=M
    @LCL
    M=D
    @R13
    D=M
    @5
    D=D-A
    A=D
    A=M
    0;JMP
